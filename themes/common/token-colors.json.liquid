{% comment %}
  TextMate token scoped highlight colors.

  This is used by VSCode as fallback when semantic token colors for a given
  token does not exist.

  See: https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide#semantic-coloring-in-color-themes

  Colors are generically assigned using color theme agnostic naming scheme
  as follows (assuming light mode):

  | base name | alias   | use                                         |
  | ----------|---------|---------------------------------------------|
  | base00    | bg_0    | default background                          |
  | base01    | bg_1    | lighter background                          |
  | base02    | bg_2    | selection background                        |
  | base03    | dim_0   | dim foreground (comments, invis chars, etc) |
  | base04    | fg_0    | lighter foreground                          |
  | base05    | fg_1    | default foreground                          |
  | base06    |         | lighter (oft unused)                        |
  | base07    |         | lightest (oft unused)                       |
  | base08    | red     |                                             |
  | base09    | orange  |                                             |
  | base0a    | magenta |                                             |
  | base0b    | green   |                                             |
  | base0c    | cyan    |                                             |
  | base0d    | blue    |                                             |
  | base0e    | yellow  |                                             |
  | base0f    | violet  |                                             |

  Note: Dark mode use the same base color naming scheme, with the lighter/darker
  semantics reversed.

  When this template is rendered as a partial (i.e. `{% render %}`), it assumes
  that the above base names are injected as variables. But the alias names are
  used throughout this file to make it more readable.
{% endcomment %}
{%- assign bg_0 =     base00 %}
{%- assign bg_1 =     base01 %}
{%- assign bg_2 =     base02 %}
{%- assign dim_0 =    base03 %}
{%- assign fg_0 =     base04 %}
{%- assign fg_1 =     base05 %}
{%- assign red =      base08 %}
{%- assign orange =   base09 %}
{%- assign magenta =  base0a %}
{%- assign green =    base0b %}
{%- assign cyan =     base0c %}
{%- assign blue =     base0d %}
{%- assign yellow =   base0e %}
{%- assign violet =   base0f %}
[
  {
    "name": "Comments",
    "scope": [
      "comment",
      "punctuation.definition.comment"
    ],
    "settings": {
      "fontStyle": "italic",
      "foreground": "#{{ dim_0 }}"
    }
  },
  {
    "name": "Comments: Preprocessor",
    "scope": "comment.block.preprocessor",
    "settings": {
      "fontStyle": "",
      "foreground": "#{{ dim_0 }}"
    }
  },
  {
    "name": "Comments: Documentation",
    "scope": [
      "comment.documentation",
      "comment.block.documentation"
    ],
    "settings": {
      "foreground": "#{{ green }}"
    }
  },
  {
    "name": "Invalid - Illegal",
    "scope": "invalid.illegal",
    "settings": {
      "foreground": "#{{ red }}"
    }
  },
  {
    "name": "Operators",
    "scope": "keyword.operator",
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Keywords",
    "scope": [
      "keyword.control",
      "keyword.other"
    ],
    "settings": {
      "foreground": "#{{ green }}"
    }
  },
  {
    "name": "Language Constants",
    "scope": [
      "constant.language",
      "support.constant",
      "variable.language"
    ],
    "settings": {
      "foreground": "#{{ orange }}"
    }
  },
  {
    "name": "Variables",
    "scope": [
      "variable",
      "variable.parameter",
      "variable.other.readwrite",
      "support.variable",
      "entity.name.variable"
    ],
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Properties",
    "scope": [
      "variable.other.property",
      "variable.other.constant.property"
    ],
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Functions and Methods",
    "scope": [
      "entity.name.function",
      "entity.name.function.declaration",
      "entity.name.function.member",
      "support.function"
    ],
    "settings": {
      "foreground": "#{{ blue }}"
    }
  },
  {
    "name": "Macros",
    "scope": [
      "entity.name.function.macro"
    ],
    "settings": {
      "foreground": "#{{ violet }}"
    }
  },
  {
    "name": "Types and Type Modifiers",
    "scope": [
      "entity.name.type",
      "entity.other.inherited-class",
      "support.class",
      "support.type",
      "storage.type",
      "storage.type.struct",
      "storage"
    ],
    "settings": {
      "foreground": "#{{ yellow }}"
    }
  },
  {
    "name": "Defined Class Name",
    "scope": [
      "entity.name.class",
      "entity.name.type.class"
    ],
    "settings": {
      "foreground": "#{{ blue }}"
    }
  },
  {
    "name": "Defined Interface Name",
    "scope": [
      "entity.name.type.interface"
    ],
    "settings": {
      "foreground": "#{{ cyan }}"
    }
  },
  {
    "name": "Defined Enum Name",
    "scope": [
      "entity.name.type.enum"
    ],
    "settings": {
      "foreground": "#{{ green }}"
    }
  },
  {
    "name": "Enum Member",
    "scope": [
      "variable.other.enummember"
    ],
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Events",
    "scope": [
      "variable.other.event"
    ],
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Namespace",
    "scope": [
      "entity.name.namespace"
    ],
    "settings": {
      "foreground": "#{{ violet }}"
    }
  },
  {
    "name": "Imports",
    "scope": [
      "keyword.control.import",
      "keyword.control.directive.include",
      "keyword.other.import"
    ],
    "settings": {
      "foreground": "#{{ orange }}"
    }
  },
  {
    "name": "Exceptions",
    "scope": "entity.name.exception",
    "settings": {
      "foreground": "#{{ red }}"
    }
  },
  {
    "name": "Sections",
    "scope": "entity.name.section",
    "settings": {
      "fontStyle": "bold"
    }
  },
  {
    "name": "Numbers, Characters",
    "scope": [
      "constant.language",
      "constant.numeric",
      "constant.character",
      "constant",
      "variable.other.constant"
    ],
    "settings": {
      "foreground": "#{{ cyan }}"
    }
  },
  {
    "name": "Strings",
    "scope": "string",
    "settings": {
      "foreground": "#{{ cyan }}"
    }
  },
  {
    "name": "Strings: Escape Sequences",
    "scope": "constant.character.escape",
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Strings: Regular Expressions",
    "scope": "string.regexp",
    "settings": {
      "foreground": "#{{ blue }}"
    }
  },
  {
    "name": "Strings: Interpolation and Escaping",
    "scope": [
      "string.constant.character.escape",
      "string.interpolated.dollar.shell",
      "string.interpolated.backtick.shell",
      "constant.character.format",
      "constant.character.escape",
      "punctuation.section.embedded",
      "punctuation.definition.template-expression"
    ],
    "settings": {
      "foreground": "#{{ magenta }}"
    }
  },
  {
    "name": "Strings: Symbols",
    "scope": "constant.other.symbol",
    "settings": {
      "foreground": "#{{ orange }}"
    }
  },
  {
    "name": "Punctuation",
    "scope": "punctuation",
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "HTML: Doctype Declaration",
    "scope": [
      "meta.tag.sgml.doctype",
      "meta.tag.sgml.doctype string",
      "meta.tag.sgml.doctype entity.name.tag",
      "meta.tag.sgml punctuation.definition.tag.html"
    ],
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "HTML: Tags",
    "scope": [
      "meta.tag",
      "punctuation.definition.tag.html",
      "punctuation.definition.tag.begin.html",
      "punctuation.definition.tag.end.html"
    ],
    "settings": {
      "foreground": "#{{ blue }}"
    }
  },
  {
    "name": "HTML: Tag Names",
    "scope": "entity.name.tag",
    "settings": {
      "foreground": "#{{ cyan }}"
    }
  },
  {
    "name": "HTML: Attribute Names",
    "scope": [
      "meta.tag entity.other.attribute-name",
      "entity.other.attribute-name.html"
    ],
    "settings": {
      "fontStyle": "italic",
      "foreground": "#{{ blue }}"
    }
  },
  {
    "name": "HTML: Entities",
    "scope": [
      "constant.character.entity",
      "punctuation.definition.entity"
    ],
    "settings": {
      "foreground": "#{{ orange }}"
    }
  },
  {
    "name": "CSS: Selectors",
    "scope": [
      "meta.selector",
      "meta.selector entity",
      "meta.selector entity punctuation",
      "entity.name.tag.css"
    ],
    "settings": {
      "foreground": "#{{ violet }}"
    }
  },
  {
    "name": "CSS: Property Names",
    "scope": [
      "meta.property-name",
      "support.type.property-name"
    ],
    "settings": {
      "foreground": "#{{ yellow }}"
    }
  },
  {
    "name": "CSS: Property Values",
    "scope": [
      "meta.property-value",
      "meta.property-value constant.other",
      "support.constant.property-value"
    ],
    "settings": {
      "foreground": "#{{ green }}"
    }
  },
  {
    "name": "CSS: Important Keyword",
    "scope": "keyword.other.important",
    "settings": {
      "fontStyle": "bold"
    }
  },
  {
    "name": "Markup: Changed",
    "scope": "markup.changed",
    "settings": {
      "foreground": "#{{ fg_1 }}"
    }
  },
  {
    "name": "Markup: Deletion",
    "scope": "markup.deleted",
    "settings": {
      "foreground": "#{{ fg_1 }}"
    }
  },
  {
    "name": "Markup: Emphasis",
    "scope": "markup.italic",
    "settings": {
      "fontStyle": "italic"
    }
  },
  {
    "name": "Markup: Error",
    "scope": "markup.error",
    "settings": {
      "foreground": "#{{ red }}"
    }
  },
  {
    "name": "Markup: Insertion",
    "scope": "markup.inserted",
    "settings": {
      "foreground": "#{{ fg_1 }}"
    }
  },
  {
    "name": "Markup: Link",
    "scope": "meta.link",
    "settings": {
      "foreground": "#{{ blue }}"
    }
  },
  {
    "name": "Markup: Output",
    "scope": [
      "markup.output",
      "markup.raw"
    ],
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Markup: Prompt",
    "scope": "markup.prompt",
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Markup: Heading",
    "scope": "markup.heading",
    "settings": {
      "foreground": "#{{ orange }}"
    }
  },
  {
    "name": "Markup: Strong",
    "scope": "markup.bold",
    "settings": {
      "fontStyle": "bold"
    }
  },
  {
    "name": "Markup: Traceback",
    "scope": "markup.traceback",
    "settings": {
      "foreground": "#{{ magenta }}"
    }
  },
  {
    "name": "Markup: Underline",
    "scope": "markup.underline",
    "settings": {
      "fontStyle": "underline"
    }
  },
  {
    "name": "Markup Quote",
    "scope": "markup.quote",
    "settings": {
      "foreground": "#{{ violet }}"
    }
  },
  {
    "name": "Markup Lists",
    "scope": "markup.list",
    "settings": {
      "foreground": "#{{ blue }}"
    }
  },
  {
    "name": "Markup Styling",
    "scope": [
      "markup.bold",
      "markup.italic"
    ],
    "settings": {
      "foreground": "#{{ green }}"
    }
  },
  {
    "name": "Markup Inline",
    "scope": "markup.inline.raw",
    "settings": {
      "fontStyle": "",
      "foreground": "#{{ orange }}"
    }
  },
  {
    "name": "Extra: Diff Range",
    "scope": [
      "meta.diff.range",
      "meta.diff.index",
      "meta.separator"
    ],
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Extra: Diff From",
    "scope": "meta.diff.header.from-file",
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  },
  {
    "name": "Extra: Diff To",
    "scope": "meta.diff.header.to-file",
    "settings": {
      "foreground": "#{{ fg_0 }}"
    }
  }
]
